##### github: thewtex/tmux-mem-cpu-load
set -g status-interval 2
# set -g status-right ''
set -g status-left '[#S] '
set -g status-right '#[fg=blue,bg=default, bright]#(tmux-mem-cpu-load --graph 20 --interval 2) #[fg=white,bg=default, dim]%a%l:%M %p #[fg=colour136,bg=default][#h]'
set -g status-right-length 100
set -g status-left-length 20

### github: altercation/solarized
if-shell "[[ -f  ~/solarized/tmux/tmuxcolors-256.conf ]]" \
'source ~/solarized/tmux/tmuxcolors-256.conf'
# #source  ~/solarized/tmux/tmuxcolors-dark.conf
# #source  ~/solarized/tmux/tmuxcolors-light.conf
# #### COLOUR (Solarized 256)
#
# # default statusbar colors
# set-option -g status-bg colour235 #base02
# set-option -g status-fg colour136 #yellow
# set-option -g status-attr default
#
# # default window title colors
# set-window-option -g window-status-fg colour244 #base0
# set-window-option -g window-status-bg default
# set-window-option -g window-status-attr dim
#
# # active window title colors
# set-window-option -g window-status-current-fg colour166 #orange
# set-window-option -g window-status-current-bg default
# set-window-option -g window-status-current-attr bright
#
# # pane border
# set-option -g pane-border-fg colour235 #base02
# set-option -g pane-active-border-fg colour240 #base01
#
# # message text
# set-option -g message-bg colour235 #base02
# set-option -g message-fg colour166 #orange
#
# # pane number display
# set-option -g display-panes-active-colour colour33 #blue
# set-option -g display-panes-colour colour166 #orange
#
# # clock
# set-window-option -g clock-mode-colour colour64 #green

#### act like GNU screen
unbind C-b
set -g prefix C-a
# Allow C-A a to send C-A to application
# bind C-a send-prefix
bind-key a send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# re-number windows when one is closed
if-shell "[[ `tmux -V` == *2.* ]]" \
'set-option -g renumber-windows on'

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# swap windows
bind -r < swap-window -t -1 # move window one position to the left
bind -r > swap-window -t +1 # move window one position to the right

# act like vim
set-window-option -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# # Rebinding the pane splitting bindings
# unbind % # Remove default bindings since we're replacing
if-shell "[[ `tmux -V` == *2.* ]]" \
'bind | split-window -h -c "#{pane_current_path}"' \
'bind | split-window -h'
# unbind " # Remove default bindings since we're replacing
if-shell "[[ `tmux -V` == *2.* ]]" \
'bind - split-window -v -c "#{pane_current_path}"' \
'bind - split-window -v'
#
if-shell "[[ `tmux -V` == *2.* ]]" \
'bind C new-window -c "#{pane_current_path}"' \
'bind C new-window'

# use 256 color scheme
set -g default-terminal "screen-256color"

# nice, big scrollback buffer (lines)
set -g history-limit 30000
# sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

set-window-option -g alternate-screen on

# utf8 ability
setw -g utf8 on

# vi Style Editing
setw -g mode-keys vi
bind [ copy-mode
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy V rectangle-toggle
bind ] paste-buffer

# setup escape key timeout
set-option -sg escape-time 50

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# This allows using the mouse to resize panes; note that there is no change in
# mouse cursor when hover over a pane divider as one might expect (everything
# still works though).
if-shell "[[ `tmux -V` == *2.1* ]]" \
'set-option -g mouse on'

if-shell "[[ `tmux -V` == *2.0* ]]" \
'set -g mouse-resize-pane on'
#
if-shell "[[ `tmux -V` == *2.0* ]]" \
'set -g mode-mouse on'

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Prevent tmux freezing when lots of text is sent to output
if-shell "[[ `tmux -V` == *2.0* ]]" \
'setw -g c0-change-trigger 10'
if-shell "[[ `tmux -V` == *2.0* ]]" \
'setw -g c0-change-interval 250'

# Use Powerline's tmux status bar
if-shell "[[ -f ~/.vim/bundle/powerline/powerline/bindings/tmux/powerline.conf ]]" \
'run-shell "powerline-daemon -q" ; source ~/.vim/bundle/powerline/powerline/bindings/tmux/powerline.conf'

# tmuxline with vim-airline: source the theme snapshot
if-shell "test -f ~/.tmuxline_snapshot.conf" \
"source ~/.tmuxline_snapshot.conf"
